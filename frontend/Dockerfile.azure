# ---- Build Stage ----
# alpine
FROM oven/bun@sha256:ffd754d1d771513d7b21fb013b60bfc1e22e862d310e9727726d25d1827b6a06 as build
# hadolint ignore=DL3008
RUN apt-get update && apt-get -y install unzip --no-install-recommends && apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /home/bun/app

# Copy only the package files first to leverage Docker cache
COPY package.json bun.lockb ./

# Install dependencies
RUN bun install --production --frozen-lockfile

# Copy the rest of the application files
COPY index.html .
COPY src src
COPY vite-env vite-env
COPY public public
COPY vite.config.mjs .
COPY eslint.config.js .

# Build the application
ARG MODE
ARG VITE_BACKEND_DOMAIN
COPY vite-env/env.${MODE}.local .env
RUN VITE_BACKEND_DOMAIN=${VITE_BACKEND_DOMAIN} NODE_ENV=${MODE} bun run build --mode ${MODE}

# ---- Release Stage ----
FROM alpine:3.22 as release

# hadolint ignore=DL3018
RUN apk update && apk add --no-cache nginx && rm -rf /var/cache/apk/*

COPY nginx.conf /etc/nginx/nginx.conf

WORKDIR /home/ops/app

# Copy built artifacts from the build stage
COPY --from=build /home/bun/app/build .

# Expose port
EXPOSE 3000/tcp

# Entry point to run the application.
ENTRYPOINT ["/bin/sh", "-c", "/usr/sbin/nginx -g 'daemon off;'"]
