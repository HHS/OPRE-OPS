openapi: 3.1.0
info:
  title: OPRE OPS API
  description: OPRE OPS API Specification
  version: 0.1.1
servers:
  - url: https://localhost:8080
    description: Localhost
  - url: https://dev.ops.opre.acf.gov/api/v1/
    description: Development Server (Live)
  - url: https://stg.ops.opre.acf.gov/api/v1/
    description: Staging Server (Live)
  - url: https://ops.opre.acf.gov/api/v1/
    description: Production Server (Live)

tags:
  - name: Agreements
    description: Everything having to do with agreements
paths:
  /api/v1/agreements/:
    get:
      tags:
        - Agreements
      operationId: getAllAgreements
      description: Get Agreements
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: project_id
          in: query
          schema:
            type: integer
          example: 1
        - name: search
          in: query
          schema:
            type: string
          example: contract
        - name: filter_params
          in: query
          schema:
            type: object
            additionalProperties: true
          description: >-
            Any property from agreements can be used to filter the agreements
            that are returned. For example `agreement_type=CONTRACT` would
            return only contracts.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreements"
              examples:
                "0":
                  $ref: "#/components/examples/Agreements"
    post:
      tags:
        - Agreements
      operationId: createAgreement
      summary: Create a new Agreement
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Agreement"
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /api/v1/agreements/{agreement_id}:
    get:
      tags:
        - Agreements
      operationId: getAgreementById
      description: Get Agreement By Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: agreement_id
          description: Agreement Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
              examples:
                "0":
                  $ref: "#/components/examples/Agreement"
    put:
      tags:
        - Agreements
      operationId: putAgreement
      summary: Update an Agreement (Over-write)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: agreement_id
          description: Agreement Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Agreement"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Agreements
      operationId: patchAgreement
      summary: Update an Agreement (Merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: agreement_id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Agreements
      operationId: deleteAgreement
      summary: Delete an Agreement
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: agreement_id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/agreements-history/{agreement_id}:
    get:
      tags:
        - Agreements
      operationId: getAgreementHistoryById
      description: Get Agreement History By Id
      parameters:
        - in: path
          name: agreement_id
          description: Agreement Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agreement"
              examples:
                "0":
                  $ref: "#/components/examples/Agreement"
  /api/v1/cans/:
    get:
      tags:
        - CANs
      operationId: getAllCANs
      summary: Get a list of all the CANs
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: Get CANs
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CAN"
    post:
      tags:
        - CANs
      operationId: createCAN
      summary: Create a new CAN object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateCANRequestSchema"
            examples:
              "0":
                $ref: "#/components/examples/CreateUpdateCANRequestSchema"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CAN"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
  /api/v1/cans/{can_id}:
    get:
      tags:
        - CANs
      summary: Get an individual CAN
      operationId: getCANById
      description: Get CAN by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_id
          description: CAN Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CAN"
              example:
                "0":
                  $ref: "#/components/examples/CAN"
    patch:
      tags:
        - CANs
      summary: Update an existing CAN with the provided fields
      operationId: patchCan
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateCANRequestSchema"
            examples:
              "0":
                $ref: "#/components/examples/CreateUpdateCANRequestSchema"
      responses:
        "200":
          description: CAN Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CAN"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CAN not found
    put:
      tags:
        - CANs
      summary: Update an existing CAN
      operationId: putCan
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateCANRequestSchema"
            examples:
              "0":
                $ref: "#/components/examples/CreateUpdateCANRequestSchema"
      responses:
        "200":
          description: CAN Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CAN"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CAN not found
    delete:
      tags:
        - CANs
      operationId: deleteCan
      summary: Delete a Common Accounting Number (CAN)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /api/v1/can-funding-received/:
    get:
      tags:
        - CANs Funding Received
      operationId: getAllCANFundingReceived
      summary: Get a list all CANs funding received
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: Get CANFundingReceived
      responses:
        "200":
          description: OK
    post:
      tags:
        - CANs Funding Received
      operationId: createCANFundingReceived
      summary: Create a new CANFundingReceived object
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CreateUpdateFundingReceived"
              examples:
                "0":
                  $ref: "#/components/examples/CreateUpdateFundingReceived"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingReceived"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
  /api/v1/can-funding-received/{can_funding_received_id}:
    get:
      tags:
        - CAN Funding Received
      summary: Get an individual CANFundingReceived
      operationId: getCANFundingReceivedById
      description: Get CANFundingReceived by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_received_id
          description: CAN Funding Received Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingReceived"
              example:
                "0":
                  $ref: "#/components/examples/FundingReceived"
        "404":
          description: The specified CANFundingReceived was not found.
    patch:
      tags:
        - CANs Funding Received
      summary: Update an existing CANFundingReceived with the provided fields
      operationId: patchCANFundingReceived
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_received_id
          description: CAN Funding Received Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CreateUpdateFundingReceived"
              examples:
                "0":
                  $ref: "#/components/examples/CreateUpdateFundingReceived"
      responses:
        "200":
          description: CANFundingReceivedUpdated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingReceived"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CANFundingReceived not found
    put:
      tags:
        - CAN Funding Received
      summary: Update an existing CANFundingReceived
      operationId: putCanFundingReceived
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_received_id
          description: CAN Funding Received Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CreateUpdateFundingReceived"
              examples:
                "0":
                  $ref: "#/components/examples/CreateUpdateFundingReceived"
      responses:
        "200":
          description: CAN Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingReceived"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CAN not found
    delete:
      tags:
        - CAN Funding Received
      operationId: deleteCanFundingReceived
      summary: Delete a CANFundingReceived
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_received_id
          description: CANFundingReceived ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Unable to find specified CANFundingReceived
  /api/v1/can-funding-details/:
      get:
        tags:
          - CANs Funding Details
        operationId: getAllCANFundingDetails
        summary: Get a list all CANs funding details objects
        parameters:
          - $ref: "#/components/parameters/simulatedError"
        description: Get CANFundingDetails
        responses:
          "200":
            description: OK
      post:
        tags:
          - CANs Funding Details
        operationId: createCANFundingDetails
        summary: Create a new CANFundingDetails object
        requestBody:
          required: true
          content:
            application/json:
                schema:
                  $ref: "#/components/schemas/CreateUpdateFundingDetails"
                examples:
                  "0":
                    $ref: "#/components/examples/CreateUpdateFundingDetails"
        responses:
          "201":
            description: Created
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/FundingDetails"
          "400":
            description: Bad Request
          "401":
            description: Insufficient Privileges to use this endpoint.
  /api/v1/can-funding-details/{can_funding_details_id}:
    get:
      tags:
        - CANs Funding Details
      summary: Get an individual CANFundingDetails
      operationId: getCANFundingDetailsById
      description: Get CANFundingDetails by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_details_id
          description: CAN Funding Details Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingDetails"
        "404":
          description: The specified CANFundingDetails was not found.
    patch:
      tags:
        - CANs Funding Details
      summary: Update an existing CANFundingDetails with the provided fields
      operationId: patchCANFundingDetails
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_details_id
          description: CAN Funding Details Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CreateUpdateFundingDetails"
              examples:
                "0":
                  $ref: "#/components/examples/CreateUpdateFundingDetails"
      responses:
        "200":
          description: CANFundingDetails Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingDetails"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CANFundingDetails not found
    put:
      tags:
        - CANs Funding Details
      summary: Update an existing CANFundingDetails
      operationId: putCanFundingDetails
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_details_id
          description: CAN Funding Details Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
              schema:
                $ref: "#/components/schemas/CreateUpdateFundingDetails"
              examples:
                "0":
                  $ref: "#/components/examples/CreateUpdateFundingDetails"
      responses:
        "200":
          description: CAN Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingDetails"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CAN not found
    delete:
      tags:
        - CANs Funding Details
      operationId: deleteCanFundingDetails
      summary: Delete a CANFundingDetails
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_details_id
          description: CANFundingDetails ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Unable to find specified CANFundingDetails
  /api/v1/can-funding-budgets/:
    get:
      tags:
        - CAN Funding Budgets
      operationId: getAllCANFundingBudgets
      summary: Get a list of all the CAN funding budgets
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: Get CANFundingBudgets
      responses:
        "200":
          description: OK
    post:
      tags:
        - CAN Funding Budgets
      operationId: createCANFundingBudget
      summary: Create a new CANFundingBudget object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateCANFundingBudgetRequest"
            examples:
              "0":
                $ref: "#/components/examples/CreateUpdateCANFundingBudgetRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingBudget"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
  /api/v1/can-funding-budgets/{can_funding_budget_id}:
    get:
      tags:
        - CAN Funding Budgets
      summary: Get an individual CANFundingBudget
      operationId: getCANFundingBudgetById
      description: Get CANFundingBudget by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_budget_id
          description: CAN Funding Budget Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingBudget"
              example:
                "0":
                  $ref: "#/components/examples/FundingBudget"
        "404":
          description: The specified CANFundingBudget was not found.
    patch:
      tags:
        - CAN Funding Budgets
      summary: Update an existing CANFundingBudget with the provided fields
      operationId: patchCanFundingBudget
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_budget_id
          description: CAN Funding Budget Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateCANFundingBudgetRequest"
            examples:
              "0":
                $ref: "#/components/examples/CreateUpdateCANFundingBudgetRequest"
      responses:
        "200":
          description: CANFundingBudget Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingBudget"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CANFundingBudget not found
    put:
      tags:
        - CAN Funding Budgets
      summary: Update an existing CANFundingBudget
      operationId: putCanFundingBudget
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_budget_id
          description: CAN Funding Budget Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUpdateCANFundingBudgetRequest"
            examples:
              "0":
                $ref: "#/components/examples/CreateUpdateCANFundingBudgetRequest"
      responses:
        "200":
          description: CAN Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingBudget"
        "400":
          description: Bad Request
        "401":
          description: Insufficient Privileges to use this endpoint.
        "404":
          description: CAN not found
    delete:
      tags:
        - CAN Funding Budgets
      operationId: deleteCanFundingBudget
      summary: Delete a CANFundingBudget
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: can_funding_budget_id
          description: CANFundingBudget ID
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Unable to find specified CANFundingBudget
  /api/v1/can-history:
    get:
      tags:
        - CAN History
      operationId: getAllCANHistory
      summary: Get a list all CAN history objects, sorted by their timestamps from newest to oldest
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: can_id
          in: query
          schema:
            type: integer
          example: 1
        - name: offset
          in: query
          schema:
            type: integer
          example: 0
        - name: limit
          in: query
          schema:
              type: integer
              default: 10
          example: 10
        - name: fiscal_year
          in: query
          schema:
            type: integer
          example: 2025
        - name: sort_asc
          in: query
          description: Optional parameter that sets whether to sort the results in ascending (oldest to newest) order
          schema:
            type: boolean
          example: true
      description: Get CANHistory
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CANHistoryList"
        "401":
          description: Insufficient Privileges to use this endpoint.
        "403":
            description: Forbidden
  /api/v1/portfolios:
    get:
      tags:
        - Portfolios
      summary: Get all Portfolios
      operationId: getAllPortfolios
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: Get Portfolios
      responses:
        "200":
          description: OK
  /api/v1/portfolios/{portfolio_id}:
    get:
      tags:
        - Portfolios
      operationId: getPortfolioById
      description: Get Portfolio by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: portfolio_id
          description: portfolio Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Portfolio"
              examples:
                "0":
                  $ref: "#/components/examples/Portfolio"
  /api/v1/portfolios/{portfolio_id}/calcFunding/:
    get:
      tags:
        - Portfolios
      operationId: getPortfolioFundingById
      description: Get Total Funding by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: portfolio_id
          description: portfolio Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: "2023"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  planned_funding:
                    type: object
                    properties:
                      amount:
                        type: number
                      percent:
                        type: string
                  obligated_funding:
                    type: object
                    properties:
                      amount:
                        type: number
                      percent:
                        type: string
                  available_funding:
                    type: object
                    properties:
                      amount:
                        type: number
                      percent:
                        type: string
                  total_funding:
                    type: object
                    properties:
                      amount:
                        type: number
                      percent:
                        type: string
                  in_execution_funding:
                    type: object
                    properties:
                      amount:
                        type: number
                      percent:
                        type: string
                  carry_forward_funding:
                    type: object
                    properties:
                      amount:
                        type: number
                      percent:
                        type: string
              examples:
                "0":
                  value: |
                    {
                      "available_funding": {
                        "amount": 12000000.0,
                        "percent": "60.0"
                      },
                      "carry_forward_funding": {
                        "amount": 0.0,
                        "percent": "Carry Over"
                      },
                      "in_execution_funding": {
                        "amount": 4000000.0,
                        "percent": "20.0"
                      },
                      "obligated_funding": {
                        "amount": 3000000.0,
                        "percent": "15.0"
                      },
                      "planned_funding": {
                        "amount": 1000000.0,
                        "percent": "5.0"
                      },
                      "total_funding": {
                        "amount": 20000000.0,
                        "percent": "Total"
                      }
                    }
  /api/v1/portfolios/{portfolio_id}/cans/:
    get:
      tags:
        - Portfolios
      operationId: getCansByPortfolioId
      description: Get CANs associated with a Portfolio
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: year
          in: query
          schema:
            type: string
          example: "2023"
        - in: path
          name: portfolio_id
          description: portfolio Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                properties: {}
                items:
                  type: string
              examples:
                "0":
                  value: |
                    [
                      {
                        "appropriation_date": "01/10/2023",
                        "appropriation_term": 1,
                        "arrangement_type_id": 3,
                        "authorizer_id": 26,
                        "description": "Incoming Interagency Agreements",
                        "expiration_date": "01/09/2024",
                        "id": 2,
                        "managing_portfolio_id": 1,
                        "managing_project_id": null,
                        "nickname": "IAA-Incoming",
                        "number": "G99IA14",
                        "purpose": ""
                      },
                      {
                        "appropriation_date": "01/10/2022",
                        "appropriation_term": 1,
                        "arrangement_type_id": 4,
                        "authorizer_id": 26,
                        "description": "Child Development Research Fellowship Grant Program",
                        "expiration_date": "01/09/2023",
                        "id": 4,
                        "managing_portfolio_id": 1,
                        "managing_project_id": 1,
                        "nickname": "ASPE SRCD-IDDA",
                        "number": "G990136",
                        "purpose": ""
                      }
                    ]
  /api/v1/portfolio-funding-summary/{portfolio_id}:
    get:
      tags:
        - Portfolio Funding Summary
      summary: Get the funding summary for a specific portfolio
      operationId: getPortfolioFundingSummary
      description: Retrieve the funding summary for a given portfolio by its ID.
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: portfolio_id
          description: Portfolio ID
          required: true
          schema:
            type: integer
            format: int32
        - name: fiscal_year
          in: query
          description: Fiscal year for which the funding summary is requested
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortfolioFundingSummary"
              example:
                value:
                  total_funding:
                    amount: 1000000.00
                    percent: "Total"
                  carry_forward_funding:
                    amount: 200000.00
                    percent: "Carry-Forward"
                  draft_funding:
                    amount: 50000.00
                    percent: "5"
                  planned_funding:
                    amount: 300000.00
                    percent: "30"
                  obligated_funding:
                    amount: 400000.00
                    percent: "40"
                  in_execution_funding:
                    amount: 100000.00
                    percent: "10"
                  available_funding:
                    amount: 150000.00
                    percent: "15"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Portfolio not found
        "500":
          description: Internal Server Error
  /api/v1/can-funding-summary:
    get:
      tags:
        - CAN Funding Summary
      operationId: getFundingSummary
      description: Get Funding Summary
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: can_ids
          in: query
          description: List of CAN Ids (required), Use an integer of 0 to get funding summary for all CANs.
          required: true
          schema:
            type: array
            items:
              type: integer
            example: [ 12345, 12346, 12347 ]
        - name: fiscal_year
          in: query
          description: Fiscal year (optional)
          schema:
            type: string
            example: "2023"
        - name: active_period
          in: query
          description: List of active periods (optional)
          schema:
            type: array
            items:
              type: integer
            example: [ 1, 5 ]
        - name: transfer
          in: query
          description: List of CAN Method of Transfers (optional)
          schema:
            type: array
            items:
              type: string
              enum:
                - DIRECT
                - COST_SHARE
                - IAA
                - IDDA
                - OTHER
            example: [ "DIRECT", "IAA" ]
        - name: portfolio
          in: query
          description: List of portfolio abbreviations (optional)
          schema:
            type: array
            items:
              type: string
            example: [ "HS", "HMRF", "CC" ]
        - name: fy_budget
          in: query
          description: List of two values representing the min and max fiscal year budget (optional)
          schema:
            type: array
            items:
              type: integer
            minItems: 2
            maxItems: 2
            example: [ 50000, 100000 ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  available_funding:
                    type: number
                    format: float
                  carry_forward_funding:
                    type: number
                    format: float
                  cans:
                    type: array
                    properties:
                      can:
                        properties:
                          active_period:
                            type: integer
                          description:
                            type: string
                          display_name:
                            type: string
                          id:
                            type: integer
                          nick_name:
                            type: string
                          number:
                            type: string
                          portfolio_id:
                            type: integer
                          projects:
                            type: array
                      carry_forward_label:
                        type: string
                      expiration_date:
                        type: string
                  expected_funding:
                    type: number
                    format: float
                  in_draft_funding:
                    type: number
                    format: float
                  in_execution_funding:
                    type: number
                    format: float
                  new_funding:
                    type: number
                    format: float
                  obligated_funding:
                    type: number
                    format: float
                  planned_funding:
                    type: number
                    format: float
                  received_funding:
                    type: number
                    format: float
                  total_funding:
                    type: number
                    format: float
              examples:
                "0":
                  value: |
                    {
                      "available_funding": 8000000.00,
                      "carry_forward_funding": 8000000.00,
                      "cans": [{
                        "can":{
                          "appropriation_date": "01/10/2022",
                          "appropriation_term": 1,
                          "arrangement_type_id": 4,
                          "authorizer_id": 26,
                          "description": "Child Development Research Fellowship Grant Program",
                          "expiration_date": "01/09/2023",
                          "id": 4,
                          "managing_portfolio_id": 1,
                          "managing_project_id": 1,
                          "nickname": "ASPE SRCD-IDDA",
                          "number": "G990136",
                          "purpose": ""
                        },
                        "carry_forward_label": "Carry-Forward",
                        "expiration_date": "09/01/2023",
                      }],
                      "expected_funding": 4000000.00,
                      "in_draft_funding": 500000.00,
                      "in_execution_funding": 2000000.00,
                      "new_funding": 2000000.00,
                      "obligated_funding": 0,
                      "planned_funding": 0,
                      "received_funding": 6000000.00,
                      "total_funding": 10000000.00
                    }
  /api/v1/users/:
    get:
      tags:
        - Users
      operationId: getAllUsers
      description: Get all Users
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: oidc_id
          in: query
          schema:
            type: string
          example: e5711101-bc3e-41e5-a6a2-051874b307ca
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  division:
                    type: integer
                  oidc_id:
                    type: string
                  full_name:
                    type: string
                  role:
                    type: string
                  last_name:
                    type: string
                  date_joined:
                    type: string
                  id:
                    type: integer
                  first_name:
                    type: string
                  updated: {}
                  email:
                    type: string
              examples:
                "0":
                  value: |
                    {
                      "date_joined": "2023-04-06T20:33:38.292475",
                      "division": 3,
                      "email": "tdonaworth+dev@flexion.us",
                      "first_name": "Tim",
                      "full_name": "(no name) (no name)",
                      "id": 5,
                      "last_name": "Donaworth",
                      "oidc_id": "e5711101-bc3e-41e5-a6a2-051874b307ca",
                      "role": "Tech Lead",
                      "updated": null
                    }
                "1":
                  value: |
                    [
                      {
                        "date_joined": "2023-04-06T20:33:38.292475",
                        "division": 1,
                        "email": "emily.ball@example.com",
                        "first_name": "Emily",
                        "full_name": "(no name) (no name)",
                        "id": 1,
                        "last_name": "Ball",
                        "oidc_id": "00000000-0000-1111-a111-000000000001",
                        "role": "COR",
                        "updated": null
                      },
                      {
                        "date_joined": "2023-04-06T20:33:38.292475",
                        "division": 4,
                        "email": "Bethanne.Barnes@example.com",
                        "first_name": "Bethanne",
                        "full_name": "(no name) (no name)",
                        "id": 2,
                        "last_name": "Barnes",
                        "oidc_id": "00000000-0000-1111-a111-000000000002",
                        "role": "Division Director",
                        "updated": null
                      },
                      {
                        "date_joined": "2023-04-06T20:33:38.292475",
                        "division": 1,
                        "email": "Meryl.Barofsky@example.com",
                        "first_name": "Meryl",
                        "full_name": "(no name) (no name)",
                        "id": 3,
                        "last_name": "Barofsky",
                        "oidc_id": "00000000-0000-1111-a111-000000000003",
                        "role": "COR",
                        "updated": null
                      },
                      {
                        "date_joined": "2023-04-06T20:33:38.292475",
                        "division": 3,
                        "email": "Anne.Bergan@example.com",
                        "first_name": "Anne",
                        "full_name": "(no name) (no name)",
                        "id": 4,
                        "last_name": "Bergan",
                        "oidc_id": "00000000-0000-1111-a111-000000000004",
                        "role": "COR",
                        "updated": null
                      },
                      {
                        "date_joined": "2023-04-06T20:33:38.292475",
                        "division": 3,
                        "email": "tdonaworth+dev@flexion.us",
                        "first_name": "Tim",
                        "full_name": "(no name) (no name)",
                        "id": 5,
                        "last_name": "Donaworth",
                        "oidc_id": "e5711101-bc3e-41e5-a6a2-051874b307ca",
                        "role": "Tech Lead",
                        "updated": null
                      }
                    ]
  /api/v1/users/{user_id}:
    get:
      tags:
        - Users
      operationId: getUserById
      description: Get User by Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: user_id
          description: User Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples:
                "0":
                  $ref: "#/components/examples/User"
  /auth/login/:
    post:
      tags:
        - Authentication
      operationId: login
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: API Authentication
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                provider:
                  type: string
            examples:
              "0":
                value: >-
                  {"code":"fd6a4ef9-686b-4dca-84a9-f2e9c8cb44a7", "provider":"logingov"}
      responses:
        "200":
          description: OK
        "204":
          description: Created
  /api/v1/research-projects/:
    get:
      tags:
        - Projects
      operationId: getResearchProjects
      description: Get ResearchProjects
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: fiscal_year
          in: query
          schema:
            type: string
          example: "2023"
        - name: portfolio_id
          in: query
          schema:
            type: string
          example: "1"
        - name: search
          in: query
          schema:
            type: string
          example: father
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResearchProjects"
              examples:
                "0":
                  $ref: "#/components/examples/ResearchProjects"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
    post:
      tags:
        - Projects
      operationId: createResearchProject
      summary: Create a new Research Project
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResearchProjectRequest"
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/research-projects/{id}:
    get:
      tags:
        - Projects
      operationId: getResearchProjectById
      description: Get Research Projects by id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResearchProject"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
  /api/v1/research-project-funding-summary/:
    get:
      tags:
        - Projects
      operationId: getResearchProjectFundingSummary
      description: ""
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: portfolioId
          in: query
          schema:
            type: integer
          example: 5
        - name: fiscalYear
          in: query
          schema:
            type: integer
          example: 2023
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResearchProjectFundingSummary"
              example:
                total_funding: 1000000.01
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  portfolio_id:
                    type: array
                    items:
                      type: string
                      example: Must be greater than or equal to 1.
                  fiscal_year:
                    type: array
                    items:
                      type: string
                      example: Must be greater than or equal to 1900.
  /api/v1/procurement-shops/:
    get:
      tags:
        - Procurement Shops
      operationId: getAllProcurementShops
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: Get all Procurement Shops
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  abbr:
                    type: string
                  fee:
                    type: number
              examples:
                "0":
                  value: |
                    [
                      {
                        "id": 0,
                        "name": "Product Service Center",
                        "abbr": "PSC",
                        "fee": 0
                      },
                      {
                        "id": 1,
                        "name": "Government Contracting Services",
                        "abbr": "GCS",
                        "fee": 0
                      },
                      {
                        "id": 2,
                        "name": "National Institute of Health",
                        "abbr": "NIH",
                        "fee": 0.5
                      },
                      {
                        "id": 3,
                        "name": "Interior Business Center",
                        "abbr": "IBC",
                        "fee": 4.8
                      }
                    ]
  /api/v1/procurement-shops/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getProcurementShopById
      description: Get Procurement Shop by id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  abbr:
                    type: string
                  fee:
                    type: number
              examples:
                "0":
                  value: |
                    {
                      "id": 0,
                      "name": "Product Service Center",
                      "abbr": "PSC",
                      "fee": 0
                    }
                "1":
                  value: |
                    {
                      "id": 1,
                      "name": "Government Contracting Services",
                      "abbr": "GCS",
                      "fee": 0
                    }
                "2":
                  value: |
                    {
                      "id": 2,
                      "name": "National Institute of Health",
                      "abbr": "NIH",
                      "fee": 0.5
                    }
                "3":
                  value: |
                    {
                      "id": 3,
                      "name": "Interior Business Center",
                      "abbr": "IBC",
                      "fee": 4.8
                    }
  /api/v1/budget-line-items/:
    get:
      tags:
        - Budget Line Items
      operationId: getBudgetLineItems
      description: Get Budget Line Items
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: can_id
          in: query
          schema:
            type: integer
          example: 1
        - name: agreement_id
          in: query
          schema:
            type: integer
          example: 1
        - name: status
          in: query
          schema:
            type: string
          example: DRAFT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetLineItems"
              examples:
                "0":
                  $ref: "#/components/examples/BudgetLineItems"
    post:
      tags:
        - Budget Line Items
      operationId: createBudgetLineItem
      summary: Create a new Budget Line Item
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetLineItemRequest"
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /api/v1/budget-line-items/{id}:
    get:
      tags:
        - Budget Line Items
      operationId: getBudgetLineItemById
      description: Get Budget Line Items by id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BudgetLineItem"
    put:
      tags:
        - Budget Line Items
      operationId: putBudgetLineItem
      summary: Update a new Budget Line Item (Over-write)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetLineItemRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Budget Line Items
      operationId: patchBudgetLineItem
      summary: Update a Budget Line Item (Merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BudgetLineItemRequest"
      responses:
        "202":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Budget Line Items
      operationId: deleteBudgetLineItem
      summary: Delete a Budget Line Item
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/notifications/:
    get:
      tags:
        - Notifications
      operationId: getNotifications
      description: Get Notifications
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: user_id
          in: query
          schema:
            type: integer
          example: 1
        - name: oidc_id
          in: query
          schema:
            type: string
          example: 6dd69df5-b6ab-4f27-890a-e64dd1d7f1e6
        - name: is_read
          in: query
          schema:
            type: boolean
          example: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notifications"
              examples:
                "0":
                  $ref: "#/components/examples/Notifications"
  /api/v1/notifications/{id}:
    get:
      tags:
        - Notifications
      operationId: getNotificationById
      description: Get Notifications By Id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
    put:
      tags:
        - Notifications
      operationId: putNotification
      summary: Update a Notification (Over-write)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Notifications
      operationId: patchNotification
      summary: Update a Notification (Merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/services-components/:
    get:
      tags:
        - Service Components
      operationId: getServicesComponents
      description: Get Services Components
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: contract_agreement_id
          in: query
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicesComponents"
    post:
      tags:
        - Service Components
      operationId: createServicesComponent
      summary: Create a new Service Component
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServicesComponentRequestPost"
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /api/v1/services-components/{id}:
    get:
      tags:
        - Service Components
      operationId: getServicesComponentById
      description: Get Services Component by id
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServicesComponent"
    put:
      tags:
        - Service Components
      operationId: putServicesComponent
      summary: Update a Services Component (Over-write)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServicesComponentRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    patch:
      tags:
        - Service Components
      operationId: patchServicesComponent
      summary: Update a Services Component (Merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServicesComponentRequest"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
    delete:
      tags:
        - Service Components
      operationId: deleteServicesComponent
      summary: Delete a Service Component
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/procurement-steps/:
    get:
      tags:
        - Procurement Shops
      operationId: getProcurementSteps
      description: Get list of Procurement Steps
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - name: agreement_id
          in: query
          schema:
            type: integer
          example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcurementSteps"
  /api/v1/procurement-acquisition-plannings/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getAcquisitionPlanningById
      description: Get an Acquisition Planning step by ID
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcquisitionPlanning"
    patch:
      tags:
        - Procurement Shops
      operationId: patchAcquisitionPlanning
      summary: Update Get an Acquisition Planning (merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcquisitionPlanning"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/procurement-pre-solicitations/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getPreSolicitationById
      description: Get a Pre-Solicitation step by ID
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreSolicitation"
    patch:
      tags:
        - Procurement Shops
      operationId: patchPreSolicitation
      summary: Update Get an Acquisition Planning (merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreSolicitation"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/procurement-solicitations/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getSolicitationById
      description: Get a Pre-Solicitation step by ID
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Solicitation"
    patch:
      tags:
        - Procurement Shops
      operationId: patchSolicitation
      summary: Update a Pre-Solicitation step (merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Solicitation"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/procurement-evaluations/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getEvaluationById
      description: Get an Evaluation step by ID
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Evaluation"
    patch:
      tags:
        - Procurement Shops
      operationId: patchEvaluation
      summary: Update an Evaluation step (merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Evaluation"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/procurement-pre-awards/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getPreAwardById
      description: Get a Pre-Award step by ID
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreAward"
    patch:
      tags:
        - Procurement Shops
      operationId: patchPreAward
      summary: Update a Pre-Award step (merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreAward"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/procurement-awards/{id}:
    get:
      tags:
        - Procurement Shops
      operationId: getAwardById
      description: Get an Award step by ID
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Award"
    patch:
      tags:
        - Procurement Shops
      operationId: patchAward
      summary: Update an Award step (merge)
      parameters:
        - $ref: "#/components/parameters/simulatedError"
        - in: path
          name: id
          description: Id
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Award"
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/change-requests/:
    description: ChangeRequests collection endpoint
    get:
      tags:
        - Change Requests
      operationId: getChangeRequests
      description: Get a list of change requests with pagination
      parameters:
        - name: offset
          in: query
          description: The number of items to skip before starting to collect the result set
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - name: limit
          in: query
          description: The numbers of items to return
          schema:
            type: integer
            format: int32
            minimum: 1
            default: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GenericChangeRequest"
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /api/v1/change-request-reviews/:
    description: command object endpoint to approve or reject a change request
    post:
      tags:
        - Change Requests
      operationId: approveOrRejectChangeRequest
      parameters:
        - $ref: "#/components/parameters/simulatedError"
      description: approve or reject a change request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                change_request_id:
                  type: integer
                action:
                  type: string
                  description: "APPROVE or REJECT"
                requestor_notes:
                  description: optional notes from the requestor added the change request
                  type: string
                reviewer_notes:
                  description: optional notes from the reviewer added the change request
                  type: string
            examples:
              "0":
                value: >-
                  {"change_request_id": 123, "action": "APPROVE", "reviewer_notes": "Looks good to me"}
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /api/v1/documents/{agreement_id}/:
    get:
      tags:
        - Documents
      operationId: Get Documents
      description: Get documents by agreement id
      parameters:
        - in: path
          name: agreement_id
          description: The agreement id to filter documents
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  documents:
                    type: array
                    items:
                      $ref: "#/components/schemas/Documents"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /api/v1/documents/:
    post:
      tags:
        - Documents
      operationId: Create Document
      description: Create a new document
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                document_name:
                  type: string
                document_type:
                  type: string
                agreement_id:
                  type: integer
                  format: int32
                document_size:
                  type: number
              required:
                - document_name
                - document_type
                - agreement_id
                - document_size
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  uuid:
                    type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
  /api/v1/documents/{document_id}/status/:
    patch:
      tags:
        - Documents
      description: Update a document status
      parameters:
        - in: path
          name: document_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                agreement_id:
                  type: integer
                  format: int32
                status:
                  type: string
              required:
                - agreement_id
                - status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
components:
  parameters:
    created_by:
      description: The user id of the user who created the object
      name: created_by
      in: query
      schema:
        type: integer
    updated_by:
      description: The user id of the user who last updated the object
      name: updated_by
      in: query
      schema:
        type: integer
    created_on:
      description: The timestamp of when the object was created
      name: created_on
      in: query
      schema:
        type: string
        format: date-time
    updated_on:
      description: The timestamp of when the object was last updated
      name: updated_on
      in: query
      schema:
        type: string
        format: date-time
    created_by_user:
      description: A minimal representation of the user who created the object
      name: created_by_user
      in: query
      schema:
        $ref: "#/components/schemas/SafeUser"
    updated_by_user:
      description: A minimal representation of the user who last updated the object
      name: updated_by_user
      in: query
      schema:
        $ref: "#/components/schemas/SafeUser"
    simulatedError:
      name: simulatedError
      in: query
      schema:
        type: integer
      example: ""
      description: >-
        Simulate an error response, set the value to either `true` to get a 500
        status code, or to a specific status code number (e.g.: `400`).
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    BasicCAN:
      description: >-
        A simple version of the Common Accounting Number (CAN) Object.
        This object is intended to be used in the schemas nested within the CAN object.
      properties:
        active_period:
          type: integer
        funding_method:
          type: string
        funding_frequency:
          type: string
        funding_type:
          type: string
        display_name:
          type: string
        nick_name:
          type: string
        number:
          type: string
        portfolio_id:
          type: integer
        description:
          type: string
        id:
          type: integer
      required:
        - number
        - portfolio_id
        - id
    CreateUpdateCANRequestSchema:
      description: The request object for creating a new Common Accounting Number (CAN) object.
      properties:
        nick_name:
          type: string
        number:
          type: string
        description:
          type: string
        portfolio_id:
          type: integer
        funding_details_id:
          type: integer
      required:
        - number
        - portfolio_id
        - nick_name
    CAN:
      description: Common Accounting Number (CAN) Object
      type: object
      properties:
        active_period:
          type: integer
        funding_method:
          type: string
        funding_frequency:
          type: string
        funding_type:
          type: string
        budget_line_items:
          type: array
          items:
            $ref: "#/components/schemas/BudgetLineItem"
        description:
          type: string
        display_name:
          type: string
        funding_budgets:
          type: array
          items:
            $ref: "#/components/schemas/FundingBudget"
        funding_details:
          type: object
          items:
            $ref: "#/components/schemas/FundingDetails"
        funding_details_id:
          type: integer
        funding_received:
          type: array
          items:
            $ref: "#/components/schemas/FundingReceived"
        id:
          type: integer
        nick_name:
          type: string
        number:
          type: string
        obligate_by:
          type: integer
        portfolio:
          type: integer
        portfolio_id:
          type: integer
        projects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - id
        - portfolio_id
        - number
    CANHistoryList:
      description: A list of CAN objects with their history
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/CANHistoryItem"
    CANHistoryItem:
        description: A single CAN object with its history
        type: object
        properties:
          id:
            type: integer
            description: The unique identifier for the history record.
            example: 2
          can_id:
            type: integer
            description: FK to the CAN object that the history record is associated with.
            example: 3
          ops_event_id:
            type: integer
            description: FK to the OPS event that triggered the history record.
            example: 4
          history_title:
            type: string
            description: The title of the history event in Markdown format.
            example: "Nickname Edited"
          history_message:
            type: string
            description: The message that describes the history event in Markdown format.
            example: "Omkar Kuber edited the nickname from 'CAN 1' to 'CAN 2'"
          timestamp:
            type: string
            description: The timestamp of when the history event was created (different than created_on).
            format: date-time
            example: "2023-09-01T00:00:00.000000Z"
          history_type:
            type: string
            enum:
              - CAN_DATA_IMPORT
              - CAN_NICKNAME_EDITED
              - CAN_DESCRIPTION_EDITED
              - CAN_FUNDING_CREATED
              - CAN_RECEIVED_CREATED
              - CAN_FUNDING_EDITED
              - CAN_RECEIVED_EDITED
              - CAN_FUNDING_DELETED
              - CAN_RECEIVED_DELETED
              - CAN_PORTFOLIO_CREATED
              - CAN_PORTFOLIO_DELETED
              - CAN_PORTFOLIO_EDITED
              - CAN_DIVISION_CREATED
              - CAN_DIVISION_DELETED
              - CAN_DIVISION_EDITED
              - CAN_CARRY_FORWARD_CALCULATED
            example: "CAN_NICKNAME_EDITED"
        required:
          - id
          - can_id
          - ops_event_id
    FundingReceived:
      description: Funding Received Object
      type: object
      properties:
        can:
          type: integer
        can_id:
          type: integer
        display_name:
          type: string
        fiscal_year:
          type: integer
        funding:
          type: number
        id:
          type: integer
        notes:
          type: string
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - id
        - can_id
        - fiscal_year
    CreateUpdateFundingReceived:
      description: A request object for the creation or updating of a FundingReceived
      type: object
      properties:
        fiscal_year:
          type: integer
        can_id:
          type: integer
        funding:
          type: number
        notes:
          type: string
      required:
        - fiscal_year
        - can_id
        - funding
    CreateUpdateFundingDetails:
      description: A request object for the creation or updating of a FundingDetails object
      type: object
      properties:
        allotment:
          type: string
        allowance:
          type: string
        display_name:
          type: string
        fiscal_year:
          type: integer
        fund_code:
          type: string
        funding_partner:
          type: string
        funding_source:
          type: string
          enum:
            - OPRE
            - ACF
            - ACF_MOU
            - HHS
            - OTHER
        method_of_transfer:
          type: string
          enum:
            - DIRECT
            - COST_SHARE
            - IAA
            - IDDA
            - OTHER
        sub_allowance:
          type: string
    FundingDetails:
      description: Funding Detail Object
      type: object
      properties:
        allotment:
          type: string
        allowance:
          type: string
        appropriation:
          type: string
        display_name:
          type: string
        fiscal_year:
          type: integer
        fund_code:
          type: string
        funding_partner:
          type: string
        funding_source:
          type: string
          enum:
            - OPRE
            - ACF
            - ACF_MOU
            - HHS
            - OTHER
        id:
          type: integer
        method_of_transfer:
          type: string
          enum:
            - DIRECT
            - COST_SHARE
            - IAA
            - IDDA
            - OTHER
        sub_allowance:
          type: string
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - fiscal_year
        - fund_code
        - id
    CreateUpdateCANFundingBudgetRequest:
      description: A request object for the creation or updating of a FundingBudget
      type: object
      properties:
        fiscal_year:
          type: integer
        can_id:
          type: integer
        budget:
          type: number
        notes:
          type: string
      required:
        - fiscal_year
        - can_id
        - budget
    FundingBudget:
      description: Funding Budget Object
      type: object
      properties:
        budget:
          type: number
        can:
          $ref: "#/components/schemas/BasicCAN"
        can_id:
          type: integer
        display_name:
          type: string
        fiscal_year:
          type: integer
        id:
          type: integer
        notes:
          type: string
        versions:
          type: array
          items:
            $ref: "#/components/schemas/FundingBudgetVersion"
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - id
        - can_id
        - fiscal_year
    FundingBudgetVersion:
      description: SQLAlchemy Continuum Version for Funding Budget
      type: object
      properties:
        budget:
          type: number
        can:
          type: integer
        can_id:
          type: integer
        display_name:
          type: string
        fiscal_year:
          type: integer
        id:
          type: integer
        notes:
          type: string
        transaction_id:
          type: integer
        end_transation_id:
          type: integer
        operation_type:
          type: integer
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    Portfolio:
      description: Portfolio Object
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        abbreviation:
          type: string
        status:
          type: string
          enum:
            - IN_PROCESS
            - NOT_STARTED
            - SANDBOX
        cans:
          type: array
          items:
            $ref: "#/components/schemas/CAN"
        division_id:
          type: integer
        urls:
          type: array
          items:
            $ref: "#/components/schemas/PortfolioUrl"
        team_leaders:
          type: array
          items:
            $ref: "#/components/schemas/SafeUser"
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - id
        - division_id
        - abbreviation
    PortfolioUrl:
      description: Used to list the URL/links associated with the Portfolio
      type: object
      properties:
        id:
          type: integer
        portfolio_id:
          type: integer
        url:
          type: string
          format: uri
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - id
        - portfolio_id
        - url
    PortfolioFundingSummary:
      description: Portfolio funding summary
      type: object
      properties:
        total_funding:
          $ref: "#/components/schemas/FundingLineItem"
        carry_forward_funding:
          $ref: "#/components/schemas/FundingLineItem"
        draft_funding:
          $ref: "#/components/schemas/FundingLineItem"
        planned_funding:
          $ref: "#/components/schemas/FundingLineItem"
        obligated_funding:
          $ref: "#/components/schemas/FundingLineItem"
        in_execution_funding:
          $ref: "#/components/schemas/FundingLineItem"
        available_funding:
          $ref: "#/components/schemas/FundingLineItem"
    FundingLineItem:
      description: Portfolio funding object
      type: object
      properties:
        amount:
          type: number
        percentage:
          type: string
    User:
      description: OPRE User Object
      type: object
      properties:
        division:
          type: integer
        oidc_id:
          type: string
        full_name:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
              - SYSTEM_OWNER
              - BUDGET_TEAM
              - REVIEWER_APPROVER
              - USER_ADMIN
              - VIEWER_EDITOR
              - PROCUREMENT_TEAM
        last_name:
          type: string
        id:
          type: integer
        first_name:
          type: string
        email:
          type: string
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    SafeUser:
      description: A minimal OPRE User Object
      type: object
      properties:
        id:
          type: integer
        full_name:
          type: string
    ResearchProjectFundingSummary:
      description: Research Project funding data for a Portfolio
      type: object
      properties:
        total_funding:
          type: number
    TeamLeader:
      type: object
      properties:
        division:
          type: integer
        email:
          type: string
        first_name:
          type: string
        full_name:
          type: string
        id:
          type: integer
        last_name:
          type: string
        oidc_id:
          type: string
        role:
          type: string
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    ResearchProject:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
        methodologies:
          type: array
          items:
            type: string
            example:
              - SURVEY
              - FIELD_RESEARCH
              - PARTICIPANT_OBSERVATION
        populations:
          type: array
          items:
            type: string
            example:
              - POPULATION_1
              - POPULATION_2
        team_leaders:
          type: array
          items:
            type: object
            example:
              [
                {
                  "created_by": null,
                  "created_on": "2023-04-17T14:43:15.216759",
                  "date_joined": "2023-04-17T14:43:15.216759",
                  "division": 1,
                  "email": "chris.fortunato@example.com",
                  "first_name": "Chris",
                  "full_name": "Chris Fortunato",
                  "id": 1,
                  "last_name": "Fortunato",
                  "oidc_id": "00000000-0000-1111-a111-000000000001",
                  "updated": null,
                  "updated_on": "2023-04-17T14:43:15.216759",
                },
              ]
        origination_date:
          type: string
          example: "2022-01-01"
        short_title:
          type: string
        title:
          type: string
          example: African American Child and Family Research Center
        url:
          type: string
          example: >-
            https://acf.gov/opre/project/african-american-child-and-family-research-center
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - title
    ResearchProjects:
      description: OPS List of Research Projects
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/ResearchProject"
    AGREEMENTS:
      description: All Agreements
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/Agreement"

    Agreement:
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: "Contract #2: African American Child and Family Research Center"
        agreement_type:
          type: string
          example: CONTRACT
        description:
          type: string
          example: Test Agreement Description
        product_service_code_id:
          type: integer
          example: 1
        agreement_reason:
          type: string
          example: NEW_REQ
        vendor:
          type: string
          example: Current Vendor
        display_name:
          type: string
          example: Test Display Name
        project:
          $ref: "#/components/schemas/Project"
        product_service_code:
          $ref: "#/components/schemas/ProductServiceCode"
        procurement_shop:
          $ref: "#/components/schemas/ProcurementShop"
        awarding_entity_id:
          type: integer
          example: 1
        notes:
          type: string
          example: Test Notes
        team_members:
          type: array
          items:
            type: object
            example:
              [
                { "id": 1, "full_name": "Chris Fortunato", "email": "chris.fortunato@example.com" },
                { "id": 2, "full_name": "Amy Madigan", "email": "Amy.Madigan@example.com" },
                {
                  "id": 3,
                  "full_name": "Ivelisse Martinez-Beck",
                  "email": "Ivelisse.Martinez-Beck@example.com",
                },
              ]
        budget_line_items:
          $ref: "#/components/schemas/BudgetLineItems"
        project_id:
          type: integer
          example: 1
        project_officer_id:
          type: integer
          example: 1
        procurement_tracker_id:
          type: integer
          example: 1
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
      required:
        - name
        - agreement_type
    Agreements:
      description: OPS List of Agreements
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/Agreement"
    AgreementHistory:
      description: List of Agreement History records
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/AgreementHistoryItem"
    AgreementHistoryItem:
      type: object
      properties:
        id:
          type: integer
          example: 2
        class_name:
          type: string
          example: ContractAgreement
        row_key:
          type: string
          example: "21"
        event_details:
          description: JSON copy of the relevant object after editing or some JSON message
          type: object
        changes:
          description: JSON for the changeset
          type: object
        log_items:
          type: array
          items:
            type: object
            properties:
              scope:
                type: string
              event_type:
                type: string
              event_class_name:
                type: string
              target_class_name:
                type: string
              target_display_name:
                type: string
              property_key:
                type: string
              change:
                type: object
                properties:
                  new:
                    type: string
                  old:
                    type: string
                  added:
                    type: object
                    properties:
                      id:
                        type: integer
                      display_name:
                        type: string
                  deleted:
                    type: object
                    properties:
                      id:
                        type: integer
                      display_name:
                        type: string
              created_by_user_full_name:
                type: string
              created_on:
                type: string
                format: date-time

        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"

    OpsDbHistoryItem:
      type: object
      properties:
        id:
          type: integer
          example: 2
        class_name:
          type: string
          example: ContractAgreement
        row_key:
          type: string
          example: "21"
        event_details:
          description: JSON copy of the relevant object after editing or some JSON message
          type: object
        changes:
          description: JSON for the changeset
          type: object
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    BudgetLineItems:
      description: OPS List of Budget Line Items
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/BudgetLineItem"

    BudgetLineItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        agreement_id:
          type: integer
          example: 1
        amount:
          type: number
          example: 1000000
        can_id:
          type: integer
          example: 1
        can:
          type: object
          $ref: "#/components/schemas/BudgetLineItemCAN"
        comments:
          type: string
        date_needed:
          type: string
          example: "2023-05-06"
        line_description:
          type: string
        proc_shop_fee_percentage:
          type: number
          example: 100.2
        status:
          type: string
          example: PLANNED
        portfolio_id:
          type: integer
          example: 1
        fiscal_year:
          type: integer
          example: 1
        team_members:
          type: array
          items:
            type: object
            example:
              [
                { "id": 1, "full_name": "Chris Fortunato", "email": "chris.fortunato@example.com" },
                { "id": 2, "full_name": "Amy Madigan", "email": "Amy.Madigan@example.com" },
                {
                  "id": 3,
                  "full_name": "Ivelisse Martinez-Beck",
                  "email": "Ivelisse.Martinez-Beck@example.com",
                },
              ]
        change_requests_in_review:
          type: array
          items:
            anyOf:
              - $ref: "#/components/schemas/GenericChangeRequest"
        clin_id:
          type: integer
          example: 1
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
        requestor_notes:
          description: optional notes added to a Change Request when a PATCH is made that creates a CR
          type: string
          writeOnly: true
        agreement:
          type: object
          $ref: "#/components/schemas/SimpleAgreementSchema"
    SimpleAgreementSchema:
      type: object
      properties:
        agreement_type:
          type: string
          example: 'AgreementType.DIRECT_ALLOCATION'
        name:
          type: string
          example: 'DIRECT ALLOCATION #2: African American Child and Family Research Center'
        awarding_entity_id:
          type: integer
          example: 3
      required:
        - agreement_type
        - name
    BudgetLineItemCAN:
      type: object
      properties:
        id:
          type: integer
          example: 1
        portfolio:
          type: object
          $ref: "#/components/schemas/PortfolioBLISchema"
        portfolio_id:
          type: integer
          example: 1
        display_name:
          type: string
        nick_name:
          type: string
        number:
          type: string
        description:
          type: string
        active_period:
          type: integer
        funding_method:
          type: string
        funding_frequency:
          type: string
        funding_type:
          type: string
        expiration_date:
          type: integer
        appropriation_date:
          type: integer
    Division:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        abbreviation:
          type: string
        division_director_id:
          type: integer
        deputy_division_director_id:
          type: integer
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
    PortfolioBLISchema:
      type: object
      properties:
        division_id:
          type: integer
        division:
          type: object
          $ref: "#/components/schemas/Division"
    BudgetLineItemRequest:
      type: object
      properties:
        agreement_id:
          type: integer
          example: 1
        amount:
          type: number
          example: 1000000
        can_id:
          type: integer
          example: 1
        comments:
          type: string
        date_needed:
          type: string
          example: "2023-05-06"
        line_description:
          type: string
        proc_shop_fee_percentage:
          type: number
          example: 100.2
        status:
          type: string
          example: PLANNED
        clin_id:
          type: integer
          example: 1
      required:
        - line_description
        - agreement_id
        - can_id
        - amount
        - status
        - date_needed

    GenericChangeRequest:
      type: object
      properties:
        id:
          type: integer
          example: 1
        change_request_type:
          type: string
          example: "BUDGET_LINE_ITEM_CHANGE_REQUEST"
        status:
          type: string
          example: "IN_REVIEW"
        requested_change_data:
          description: JSON for the request changes
          type: object
        requested_change_diff:
          description: JSON for the request changes with new and old values at request time
          type: object
        requestor_notes:
          description: notes from the requestor (aka submitter notes)
          type: string
        created_by:
          $ref: "#/components/parameters/created_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        created_on:
          $ref: "#/components/parameters/created_on"
        reviewed_by:
          type: integer
        reviewed_on:
          type: string
          format: date-time
        reviewer_notes:
          type: string
        updated_by:
          $ref: "#/components/parameters/updated_by"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        agreement_id:
          type: integer
          example: 1
        budget_line_item_id:
          type: integer
          example: 1
        has_budget_change:
          type: boolean
          example: True
        has_status_change:
          type: boolean
          example: False

    ResearchProjectRequest:
      type: object
      properties:
        title:
          type: string
          example: "Research Project #1"
        short_title:
          type: string
          example: RP#1
        description:
          type: string
          example: "Description #1"
        url:
          type: string
          example: https://example.com
        origination_date:
          type: string
          example: "2023-05-06"
        methodologies:
          type: array
          items:
            type: string
            example:
              - SURVEY
              - FIELD_RESEARCH
              - PARTICIPANT_OBSERVATION
        populations:
          type: array
          items:
            type: string
            example:
              - POPULATION_1
              - POPULATION_2
        team_leaders:
          type: array
          items:
            type: object
            example: [{ "id": 1 }, { "id": 2 }, { "id": 3 }]

      required:
        - title
    Notifications:
      description: OPS List of Notifications
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/Notification"
    Notification:
      type: object
      properties:
        id:
          type: integer
          example: 1
        notification_type:
          type: string
          example: "CHANGE_REQUEST_NOTIFICATION"
        title:
          type: string
          example: "Notification #1"
        is_read:
          type: boolean
          example: true
        message:
          type: string
          example: "Message #1"
        expires:
          type: string
          example: "2023-04-06"
        change_request:
          $ref: "#/components/schemas/GenericChangeRequest"
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    NotificationRequest:
      type: object
      properties:
        is_read:
          type: boolean
          example: true
        title:
          type: string
          example: "Notification #1"
        message:
          type: string
          example: "Message #1"
        recipient_id:
          type: integer
          example: 1
    ServicesComponents:
      description: OPS List of Services Components
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/ServicesComponent"
    ServicesComponent:
      type: object
      properties:
        id:
          type: integer
          example: 1
        contract_agreement_id:
          type: integer
          example: 1
        number:
          type: integer
          example: 1
        optional:
          type: boolean
          example: false
        description:
          type: string
        display_title:
          type: string
        display_name:
          type: string
        period_start:
          type: string
          example: "2023-05-06"
        period_end:
          type: string
          example: "2023-06-30"
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    ServicesComponentRequest:
      type: object
      properties:
        contract_agreement_id:
          type: integer
          example: 1
        number:
          type: integer
          example: 1
        optional:
          type: boolean
          example: false
        description:
          type: string
        display_title:
          type: string
        display_name:
          type: string
        clin_id:
          type: integer
          example: 1
        period_start:
          type: string
          example: "2023-05-06"
        period_end:
          type: string
          example: "2023-06-30"
      required:
        - contract_agreement_id
        - number
        - optional
    ServicesComponentRequestPost:
      allOf:
        - $ref: "#/components/schemas/ServicesComponentRequest"
    ProcurementSteps:
      description: OPS List of Procurement Steps
      type: array
      items:
        anyOf:
          - $ref: "#/components/schemas/ProcurementStep"
          - $ref: "#/components/schemas/AcquisitionPlanning"
          - $ref: "#/components/schemas/PreSolicitation"
          - $ref: "#/components/schemas/Solicitation"
          - $ref: "#/components/schemas/Evaluation"
          - $ref: "#/components/schemas/PreAward"
          - $ref: "#/components/schemas/Award"
    ProcurementStep:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        type:
          type: string
          example: procurement_acquisition_planning
        contract_agreement_id:
          type: integer
          example: 1
        workflow_step_id:
          type: integer
          example: 1
        display_name:
          type: string
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
        created_by_user:
          $ref: "#/components/parameters/created_by_user"
        updated_by_user:
          $ref: "#/components/parameters/updated_by_user"
    ProcurementShop:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Procurement Shop Name
        abbr:
          type: string
          example: PSN
        fee:
          type: number
          format: float
          example: 1.1
          default: 0.0
      required:
        - id
        - name
        - abbr
    ProductServiceCode:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Code ABC
        naics:
          type: integer
          example: 3
        support_code:
          type: string
          example: Example Support Code
        description:
          type: string
          example: Description of the product service code
      required:
        - id
        - name
    Project:
      type: object
      properties:
        id:
          type: integer
          example: 1
        project_type:
          type: string
          enum:
            - RESEARCH
            - ADMINISTRATIVE_AND_SUPPORT
        title:
          type: string
          example: Example Project Title
        short_title:
          type: string
          example: Short Title
        description:
          type: string
          example: A short description about the project
        url:
          type: string
          example: www.example.com
      required:
        - id
        - project_type
        - title
        - short_title
        - description
    Attestation:
      type: object
      properties:
        is_complete:
          type: boolean
          example: false
        actual_date:
          type: string
          example: "2023-05-06"
        completed_by:
          type: string
        notes:
          type: string
    TargetDate:
      type: object
      properties:
        target_date:
          type: string
          example: "2023-05-06"
    AcquisitionPlanning:
      allOf:
        - $ref: "#/components/schemas/ProcurementStep"
        - $ref: "#/components/schemas/Attestation"
    PreSolicitation:
      allOf:
        - $ref: "#/components/schemas/ProcurementStep"
        - $ref: "#/components/schemas/Attestation"
        - $ref: "#/components/schemas/TargetDate"
    Solicitation:
      allOf:
        - $ref: "#/components/schemas/ProcurementStep"
        - $ref: "#/components/schemas/Attestation"
        - $ref: "#/components/schemas/TargetDate"
    Evaluation:
      allOf:
        - $ref: "#/components/schemas/ProcurementStep"
        - $ref: "#/components/schemas/Attestation"
        - $ref: "#/components/schemas/TargetDate"
    PreAward:
      allOf:
        - $ref: "#/components/schemas/ProcurementStep"
        - $ref: "#/components/schemas/Attestation"
        - $ref: "#/components/schemas/TargetDate"
    Award:
      allOf:
        - $ref: "#/components/schemas/ProcurementStep"
        - $ref: "#/components/schemas/Attestation"
    DocumentResponse:
      type: object
      properties:
        url:
          type: string
        documents:
          $ref: "#/components/schemas/Documents"
    Documents:
      type: object
      properties:
        agreement_id:
          type: integer
          format: int32
        document_id:
          type: string
        document_type:
          type: string
        document_name:
          type: string
        document_size:
          type: number
          description: precision number with 10 digits and 2 decimal places
        status:
          type: string
        created_on:
          $ref: "#/components/parameters/created_on"
        updated_on:
          $ref: "#/components/parameters/updated_on"
        created_by:
          $ref: "#/components/parameters/created_by"
        updated_by:
          $ref: "#/components/parameters/updated_by"
  examples:
    CAN:
      value:
        - appropriation_date: "2023-09-01T00:00:00.000000Z"
        - appropriation_term: 1
        - arrangement_type_id: 2
        - authorizer_id: 23
        - description: Healthy Marriages Responsible Fatherhood - OFA
        - expiration_date: "2023-09-01T00:00:00.000000Z"
        - id: 10
        - managing_portfolio_id: 6
        - managing_project_id: null
        - nickname: HMRF-OFA
        - number: G99XXX3
        - purpose: ""
    Portfolio:
      value: |
        {
          "cans": [
              {
                  "appropriation_date": "2023-09-01T00:00:00.000000Z",
                  "appropriation_term": 1,
                  "arrangement_type_id": 3,
                  "authorizer_id": 26,
                  "description": "Incoming Interagency Agreements",
                  "expiration_date": "2023-09-01T00:00:00.000000Z",
                  "id": 2,
                  "managing_portfolio_id": 1,
                  "managing_project_id": null,
                  "nickname": "IAA-Incoming",
                  "number": "G99IA14",
                  "purpose": "",
                  "created_on": "2023-04-06T20:33:38.292475",
                  "updated_on": "2023-04-06T20:33:38.292475",
                  "created_by": 1,
                  "updated_by": 1
              },
              {
                  "appropriation_date": "2023-09-01T00:00:00.000000Z",
                  "appropriation_term": 1,
                  "arrangement_type_id": 4,
                  "authorizer_id": 26,
                  "description": "Child Development Research Fellowship Grant Program",
                  "expiration_date": "2023-09-01T00:00:00.000000Z",
                  "id": 4,
                  "managing_portfolio_id": 1,
                  "managing_project_id": 1,
                  "nickname": "ASPE SRCD-IDDA",
                  "number": "G990136",
                  "purpose": "",
                  "created_on": "2023-04-06T20:33:38.292475",
                  "updated_on": "2023-04-06T20:33:38.292475",
                  "created_by": 1,
                  "updated_by": 1
              }
          ],
          "description": "The promotion of childrens safety, ... to the attention of child welfare.",
          "division": {
              "abbreviation": "DFCD",
              "id": 1,
              "name": "Division of Child and Family Development"
              "division_director_id": "522"
              "deputy_division_director_id": "520"
              "created_on": "2024-11-14 20:20:55.176355"
              "updated_on": "2024-11-14 20:20:55.176355"
              "created_by": 1,
              "updated_by": 1
          },
          "division_id": 1,
          "id": 1,
          "name": "Child Welfare Research",
          "status": "Active",
          "status_id": 1,
          "team_leaders": [
              {
                  "date_joined": "2023-04-06T20:33:38.292475",
                  "division": 1,
                  "email": "emily.ball@example.com",
                  "first_name": "Emily",
                  "full_name": "(no name) (no name)",
                  "id": 1,
                  "last_name": "Ball",
                  "oidc_id": "00000000-0000-1111-a111-000000000001",
                  "role": "COR",
                  "updated": null
              }
          ],
          "urls": [
              {
                  "id": 1,
                  "portfolio_id": 1,
                  "url": "https://acf.gov/opre/topic/overview/abuse-neglect-adoption-foster-care"
              }
          ],
          "created_on": "2023-04-06T20:33:38.292475",
          "updated_on": "2023-04-06T20:33:38.292475",
          "created_by": 1,
          "updated_by": 1
        }
    User:
      value: |
        {
          "division": 3,
          "email": "user@email.com",
          "first_name": "Jon",
          "full_name": "Jon Doe",
          "id": 5,
          "last_name": "Doe",
          "oidc_id": "00000000-aaaa-bbbb-0000-000000000001",
          "role": "Administrator",
          "created_on": "2023-04-06T20:33:38.292475",
          "updated_on": "2023-04-06T20:33:38.292475",
          "created_by": 1,
          "updated_by": 1
        }
    ResearchProjects:
      value: |
        [
          {
            "created_on": "2023-04-06T20:33:38.292475",
            "updated_on": "2023-04-06T20:33:38.292475",
            "created_by": 1,
            "updated_by": 1
            "description": "        The National African American Child and Family Research Center, supported by a five-year OPRE        grant (2021 — 2026), will provide national leadership and excellence by investigating the assets, needs,        and experiences of the diverse population of African American families and children served (or potentially        served) by ACF programs, as well as promising approaches to address economic and social inequities and,        ultimately, promote social and economic well-being.  The primary focus of this Center will be on childcare        assistance, TANF, and Head Start and Early Head Start programs and the populations they serve. The work of        the Center will draw on interdisciplinary approaches to accomplish the three goals listed below.        \n\n1. Advance Research        The Center will plan, initiate, and maintain a community-engaged, focused, and high-caliber research program.        The Center’s program of research will build on the existing literature related to African American children        and families and should be directly relevant to the needs and interests of ACF areas of programmatic concern.        \n\n2. Build Research Capacity        The Center will build research capacity and infrastructure to conduct research relevant to ACF program and        policy goals that is culturally rigorous and informed by an understanding of current and historical        circumstances that shape the experiences of African Americans. In addition, the Center will contribute to the        development and expansion of the pool of researchers reflective of the communities being studied by the Center.        \n\n3. Communicate Research        The Center will develop and implement a dissemination strategy that broadly and efficiently communicates        findings from research conducted within and outside of the Center and increases the use of research, data, and        relevant resources for a wide audience including researchers, federal and state policymakers, ACF grantees,        program administrators, and communities participating in the research.        \n\nThe Center is led by the Morehouse School of Medicine.        \n\nThe OPRE point of contact is Megan Reid.        ",
            "id": 1,
            "methodologies": [
                "SURVEY",
                "FIELD_RESEARCH",
                "PARTICIPANT_OBSERVATION",
                "ETHNOGRAPHY",
                "EXPERIMENT",
                "SECONDARY_DATA_ANALYSIS",
                "CASE_STUDY"
            ],
            "origination_date": "2022-01-01",
            "populations": [
                "POPULATION_1"
            ],
            "short_title": "",
            "team_leaders": [
                {
                    "created_by": null,
                    "created_on": "2023-04-17T14:43:15.216759",
                    "date_joined": "2023-04-17T14:43:15.216759",
                    "division": 1,
                    "email": "chris.fortunato@example.com",
                    "first_name": "Chris",
                    "full_name": "Chris Fortunato",
                    "id": 1,
                    "last_name": "Fortunato",
                    "oidc_id": "00000000-0000-1111-a111-000000000001",
                    "updated": null,
                    "updated_on": "2023-04-17T14:43:15.216759"
                }
            ],
            "title": "African American Child and Family Research Center",
            "url": "https://acf.gov/opre/project/african-american-child-and-family-research-center"
          }
        ]
    AGREEMENTS:
      value: |
        [
           {
               "id": 1,
               "created_on": "2023-04-06T20:33:38.292475",
               "updated_on": "2023-04-06T20:33:38.292475",
               "created_by": 1,
               "updated_by": 1
               "name": "Using Innovative Data to Explore Racial and Ethnic Disparities in Human Services",
               "project_id": 1,
               "description":
                   "This will be a contract to continue planned analyses to explore racial and ethnic disparities in Human Services.",
               "agreement_type": "CONTRACT",
               "project_officer": "Ivelisse Martinez-Beck",
               "period_of_performance_start": "2021-01-01",
               "period_of_performance_end": "2021-12-31",
               procurement_shop: {
                   id: 2,
                   name: "Government Contracting Services",
                   fee: 0,
               },
               budget_line_items: [
                   {
                       id: 123456,
                       line_description: "LI 1",
                       comments: "",
                       can_id: 5,
                       can_number: "G994426",
                       agreement_id: 1,
                       amount: 1000000.0,
                       status: "EXECUTING",
                       date_needed: "2111-1-11",
                       proc_shop_fee_percentage: 0,
                       created_by: "Carolyn Hsu",
                       created_on: "2023-4-5",
                       updated_on: "2023-4-15",
                   },
                   {
                       id: 123457,
                       line_description: "LI 2",
                       comments: "",
                       can_id: 5,
                       can_number: "G994426",
                       agreement_id: 1,
                       amount: 1000000.0,
                       status: "OBLIGATED",
                       date_needed: "2222-2-22",
                       proc_shop_fee_percentage: 0,
                       created_by: "Carolyn Hsu",
                       created_on: "2023-4-1",
                       updated_on: "2023-4-15",
                   },
                   {
                       id: 123458,
                       line_description: "LI 3",
                       comments: "",
                       can_id: 5,
                       can_number: "G994426",
                       agreement_id: 1,
                       amount: 1000000.0,
                       status: "PLANNED",
                       date_needed: "2333-3-13",
                       proc_shop_fee_percentage: 0,
                       created_by: "Carolyn Hsu",
                       created_on: "2023-3-11",
                       updated_on: "2023-4-15",
                   },
                 ],
           },

         ];
    Agreements:
      value: |
        [{
          "agreement_type": "CONTRACT",
          "created_on": "2023-04-06T20:33:38.292475",
          "updated_on": "2023-04-06T20:33:38.292475",
          "created_by": 1,
          "updated_by": 1
          "id": 2,
          "name": "Contract #2: African American Child and Family Research Center",
          "project_id": 1,
           cans: [],
           budget_line_items: [
            {
                line_description: "LI 1",
                comments: "",
                can_id: 5,
                agreement_id: 1,
                amount: 1000000.0,
                status: "EXECUTING",
                date_needed: "2111-1-11",
                proc_shop_fee_percentage: 0.5,
            },
            {
                line_description: "LI 2",
                comments: "",
                can_id: 5,
                agreement_id: 1,
                amount: 1000000.0,
                status: "OBLIGATED",
                date_needed: "2222-2-22",
                proc_shop_fee_percentage: 0.5,
            },
            {
                line_description: "LI 3",
                comments: "",
                can_id: 5,
                agreement_id: 1,
                amount: 1000000.0,
                status: "PLANNED",
                date_needed: "2333-3-13",
                proc_shop_fee_percentage: 0.5,
            },
        ],
        }]
    Agreement:
      value: |
        {
          "agreement_type": "CONTRACT",
          "created_on": "2023-04-06T20:33:38.292475",
          "updated_on": "2023-04-06T20:33:38.292475",
          "created_by": 1,
          "updated_by": 1
          "id": 2,
          "name": "Contract #2: African American Child and Family Research Center",
          "project_id": 1,
          cans: [],
          budget_line_items: [
            {
                line_description: "LI 1",
                comments: "",
                can_id: 5,
                agreement_id: 2,
                amount: 1000000.0,
                status: "EXECUTING",
                date_needed: "2111-1-11",
                proc_shop_fee_percentage: 0.5,
            },
            {
                line_description: "LI 2",
                comments: "",
                can_id: 5,
                agreement_id: 2,
                amount: 1000000.0,
                status: "OBLIGATED",
                date_needed: "2222-2-22",
                proc_shop_fee_percentage: 0.5,
            },
            {
                line_description: "LI 3",
                comments: "",
                can_id: 5,
                agreement_id: 2,
                amount: 1000000.0,
                status: "PLANNED",
                date_needed: "2333-3-13",
                proc_shop_fee_percentage: 0.5,
            },
        ],
        }
    BudgetLineItems:
      value: |
        [
          {
              "agreement_id": 1,
              "amount": 1000000.0,
              "can_id": 5,
              "comments": "",
              "date_needed": "2023-05-06",
              "id": 1,
              "line_description": "LI 1",
              "proc_shop_fee_percentage": null,
              "status": "PLANNED",
              "created_on": "2023-04-06T20:33:38.292475",
              "updated_on": "2023-04-06T20:33:38.292475",
              "created_by": 1,
              "updated_by": 1
          },
          {
              "agreement_id": 1,
              "amount": 1000000.0,
              "can_id": 5,
              "comments": "",
              "date_needed": "2023-05-06",
              "id": 2,
              "line_description": "LI 2",
              "proc_shop_fee_percentage": null,
              "status": "PLANNED",
              "created_on": "2023-04-06T20:33:38.292475",
              "updated_on": "2023-04-06T20:33:38.292475",
              "created_by": 1,
              "updated_by": 1
          },
          {
              "agreement_id": 2,
              "amount": 1000000.0,
              "can_id": 8,
              "comments": "",
              "date_needed": "2023-05-06",
              "id": 3,
              "line_description": "Line Item 1",
              "proc_shop_fee_percentage": null,
              "status": "PLANNED",
              "created_on": "2023-04-06T20:33:38.292475",
              "updated_on": "2023-04-06T20:33:38.292475",
              "created_by": 1,
              "updated_by": 1
          }
        ]
    CreateUpdateCANRequestSchema:
      value: |
        {
          nick_name: "Very Good CAN",
          number: "G998235",
          portfolio_id: 6,
          description: "A very good CAN to use for examples."
        }
    CreateUpdateFundingReceived:
      value: |
        {
          can_id: 500,
          fiscal_year: 2024,
          funding: 123456,
          notes: "A new test Funding Budget"
        }
    FundingReceived:
      value: |
        {
          funding: 1234567.89
          can: {}
          can_id: 500
          display_name: CANFundingBudget.1
          fiscal_year: 2024
          id: 1
          notes: "A funding budget"
          versions: {}
    CreateUpdateCANFundingBudgetRequest:
      value: |
        {
          can_id: 500,
          fiscal_year: 2024,
          budget: 123456,
          notes: "A new test Funding Funding"
        }

    CreateUpdateFundingDetails:
      value: |
        {
          allotment: "Allotment"
          allowance: "Allowance"
          display_name: "Display name"
          fiscal_year: 2024
          fund_code: "AAXXXX20231DAD"
          funding_partner: "OPRE Partner"
          funding_source: "OPRE"
          method_of_transfer: "DIRECT"
          sub_allowance: "Money"
        }
    FundingBudget:
      value: |
        {
          budget: 1234567.89
          can: {}
          can_id: 500
          display_name: CANFundingBudget.1
          fiscal_year: 2024
          id: 1
          notes: "A funding budget"
          versions: {}
    Notifications:
      value: |
        [
        ]
security:
  - bearerAuth: []
