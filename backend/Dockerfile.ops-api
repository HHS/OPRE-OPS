FROM alpine:3.22 AS deps

ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/home/app

# hadolint ignore=DL3018
RUN apk update && apk add --no-cache python3 py3-pip

# Copy the Pipfile(s) only, so that we can cache dependencies
# in the next step
COPY ./ops_api/Pipfile ./ops_api/Pipfile.lock /home/app/
WORKDIR /home/app

# hadolint ignore=DL3018
RUN python -m venv .venv && \
   .venv/bin/pip install --upgrade pip && \
   apk add --update --no-cache alpine-sdk && \
   apk add --update --no-cache curl && \
   apk add --update --no-cache --virtual .tmp-build-deps \
      build-base gcc python3-dev postgresql-dev musl-dev libffi-dev openssl-dev cargo  && \
   .venv/bin/pip install --no-cache-dir pipenv==2024.0.1 && \
   .venv/bin/pipenv install --dev --deploy && \
   rm -rf /tmp && rm -rf /var/cache/apk/* \
   apk del .tmp-build-deps

# Production stage
FROM deps AS production

# Create a non-root user to run the app
RUN adduser app -D

USER app
WORKDIR /home/app

# Now copy the rest of the app files, again to better support caching
# of prior steps.
COPY . /home/app

ENV FLASK_APP=ops_api.ops
ENV FLASK_DEBUG=true

## This is to attempt fixing the worker issues.
CMD [".venv/bin/pipenv", "run", "python", "-m", "gunicorn", "--timeout", "1000", "--workers", "1", "--threads", "4", "-b", ":8080", "ops_api.ops:create_app()"]
## --timeout 1000 --workers 1 --threads 4
