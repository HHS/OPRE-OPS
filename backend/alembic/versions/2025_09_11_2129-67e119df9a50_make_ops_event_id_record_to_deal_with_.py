"""Make ops_event_id_record to deal with deletes during tests

Revision ID: 67e119df9a50
Revises: 8d8d4eefa1c9
Create Date: 2025-09-11 21:29:41.940760+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '67e119df9a50'
down_revision: Union[str, None] = '8d8d4eefa1c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agreement_history', sa.Column('ops_event_id_record', sa.Integer(), nullable=True))
    op.alter_column('agreement_history', 'ops_event_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(op.f('agreement_history_ops_event_id_fkey'), 'agreement_history', type_='foreignkey')
    op.create_foreign_key(None, 'agreement_history', 'ops_event', ['ops_event_id'], ['id'], ondelete='SET NULL')
    op.add_column('agreement_history_version', sa.Column('ops_event_id_record', sa.Integer(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('agreement_history_version', 'ops_event_id_record')
    op.drop_constraint(None, 'agreement_history', type_='foreignkey')
    op.create_foreign_key(op.f('agreement_history_ops_event_id_fkey'), 'agreement_history', 'ops_event', ['ops_event_id'], ['id'])
    op.alter_column('agreement_history', 'ops_event_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('agreement_history', 'ops_event_id_record')
    # ### end Alembic commands ###
