"""add AA agreeement type and nick_name

Revision ID: ec6f7a5a9cea
Revises: 10064745b084
Create Date: 2025-06-25 18:18:10.498756+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "ec6f7a5a9cea"
down_revision: Union[str, None] = "bf7b5e587a03"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "aa_agreement_version",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column(
            "requesting_agency_id", sa.Integer(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "servicing_agency_id", sa.Integer(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "service_requirement_type",
            postgresql.ENUM(
                "SEVERABLE",
                "NON_SEVERABLE",
                name="servicerequirementtype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("contract_number", sa.String(), autoincrement=False, nullable=True),
        sa.Column("vendor_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("task_order_number", sa.String(), autoincrement=False, nullable=True),
        sa.Column("po_number", sa.String(), autoincrement=False, nullable=True),
        sa.Column(
            "acquisition_type",
            postgresql.ENUM(
                "GSA_SCHEDULE",
                "TASK_ORDER",
                "FULL_AND_OPEN",
                name="acquisitiontype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("delivered_status", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column(
            "contract_type",
            postgresql.ENUM(
                "FIRM_FIXED_PRICE",
                "TIME_AND_MATERIALS",
                "COST_PLUS_FIXED_FEE",
                "COST_PLUS_AWARD_FEE",
                "HYBRID",
                name="contracttype",
                create_type=False,
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "contract_category",
            postgresql.ENUM(
                "RESEARCH", "SERVICE", name="contractcategory", create_type=False
            ),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "psc_contract_specialist", sa.String(), autoincrement=False, nullable=True
        ),
        sa.Column("cotr_id", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    op.create_index(
        op.f("ix_aa_agreement_version_end_transaction_id"),
        "aa_agreement_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_aa_agreement_version_operation_type"),
        "aa_agreement_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_aa_agreement_version_transaction_id"),
        "aa_agreement_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "aa_budget_line_item_version",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    op.create_index(
        op.f("ix_aa_budget_line_item_version_end_transaction_id"),
        "aa_budget_line_item_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_aa_budget_line_item_version_operation_type"),
        "aa_budget_line_item_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_aa_budget_line_item_version_transaction_id"),
        "aa_budget_line_item_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "aa_support_contacts_version",
        sa.Column("aa_id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("users_id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("aa_id", "users_id", "transaction_id"),
    )
    op.create_index(
        op.f("ix_aa_support_contacts_version_end_transaction_id"),
        "aa_support_contacts_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_aa_support_contacts_version_operation_type"),
        "aa_support_contacts_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_aa_support_contacts_version_transaction_id"),
        "aa_support_contacts_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "agreement_agency_version",
        sa.Column("id", sa.Integer(), autoincrement=False, nullable=False),
        sa.Column("name", sa.String(), autoincrement=False, nullable=True),
        sa.Column("abbreviation", sa.String(), autoincrement=False, nullable=True),
        sa.Column("requesting", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("servicing", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("created_on", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("updated_on", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    op.create_index(
        op.f("ix_agreement_agency_version_end_transaction_id"),
        "agreement_agency_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_agreement_agency_version_operation_type"),
        "agreement_agency_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_agreement_agency_version_transaction_id"),
        "agreement_agency_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "agreement_agency",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("abbreviation", sa.String(), nullable=True),
        sa.Column("requesting", sa.Boolean(), nullable=False),
        sa.Column("servicing", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=True),
        sa.Column("updated_on", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["ops_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["ops_user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("abbreviation"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "aa_agreement",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("requesting_agency_id", sa.Integer(), nullable=False),
        sa.Column("servicing_agency_id", sa.Integer(), nullable=False),
        sa.Column(
            "service_requirement_type",
            postgresql.ENUM(
                "SEVERABLE",
                "NON_SEVERABLE",
                name="servicerequirementtype",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("contract_number", sa.String(), nullable=True),
        sa.Column("vendor_id", sa.Integer(), nullable=True),
        sa.Column("task_order_number", sa.String(), nullable=True),
        sa.Column("po_number", sa.String(), nullable=True),
        sa.Column(
            "acquisition_type",
            postgresql.ENUM(
                "GSA_SCHEDULE",
                "TASK_ORDER",
                "FULL_AND_OPEN",
                name="acquisitiontype",
                create_type=False,
            ),
            nullable=True,
        ),
        sa.Column("delivered_status", sa.Boolean(), nullable=False),
        sa.Column(
            "contract_type",
            postgresql.ENUM(
                "FIRM_FIXED_PRICE",
                "TIME_AND_MATERIALS",
                "COST_PLUS_FIXED_FEE",
                "COST_PLUS_AWARD_FEE",
                "HYBRID",
                name="contracttype",
                create_type=False,
            ),
            nullable=True,
        ),
        sa.Column(
            "contract_category",
            postgresql.ENUM(
                "RESEARCH", "SERVICE", name="contractcategory", create_type=False
            ),
            nullable=True,
        ),
        sa.Column("psc_contract_specialist", sa.String(), nullable=True),
        sa.Column("cotr_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["cotr_id"],
            ["ops_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["id"],
            ["agreement.id"],
        ),
        sa.ForeignKeyConstraint(
            ["requesting_agency_id"],
            ["agreement_agency.id"],
        ),
        sa.ForeignKeyConstraint(
            ["servicing_agency_id"],
            ["agreement_agency.id"],
        ),
        sa.ForeignKeyConstraint(
            ["vendor_id"],
            ["vendor.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "aa_budget_line_item",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"],
            ["budget_line_item.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "aa_support_contacts",
        sa.Column("aa_id", sa.Integer(), nullable=False),
        sa.Column("users_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["aa_id"],
            ["aa_agreement.id"],
        ),
        sa.ForeignKeyConstraint(
            ["users_id"],
            ["ops_user.id"],
        ),
        sa.PrimaryKeyConstraint("aa_id", "users_id"),
    )
    op.drop_index(
        op.f("ix_iaa_aa_agreement_version_end_transaction_id"),
        table_name="iaa_aa_agreement_version",
    )
    op.drop_index(
        op.f("ix_iaa_aa_agreement_version_operation_type"),
        table_name="iaa_aa_agreement_version",
    )
    op.drop_index(
        op.f("ix_iaa_aa_agreement_version_transaction_id"),
        table_name="iaa_aa_agreement_version",
    )
    op.drop_table("iaa_aa_agreement_version")
    op.drop_table("iaa_aa_agreement")
    op.add_column("agreement", sa.Column("nick_name", sa.String(), nullable=True))
    op.create_unique_constraint(None, "agreement", ["nick_name"])
    op.add_column(
        "agreement_version",
        sa.Column("nick_name", sa.String(), autoincrement=False, nullable=True),
    )
    op.sync_enum_values(
        enum_schema="ops",
        enum_name="agreementtype",
        new_values=["CONTRACT", "GRANT", "DIRECT_OBLIGATION", "IAA", "AA"],
        affected_columns=[
            TableReference(
                table_schema="ops", table_name="agreement", column_name="agreement_type"
            ),
            TableReference(
                table_schema="ops",
                table_name="agreement_version",
                column_name="agreement_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="budget_line_item",
                column_name="budget_line_item_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="budget_line_item_version",
                column_name="budget_line_item_type",
            ),
        ],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema="ops",
        enum_name="contracttype",
        new_values=[
            "FIRM_FIXED_PRICE",
            "TIME_AND_MATERIALS",
            "COST_PLUS_FIXED_FEE",
            "COST_PLUS_AWARD_FEE",
            "HYBRID",
        ],
        affected_columns=[
            TableReference(
                table_schema="ops",
                table_name="aa_agreement",
                column_name="contract_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="aa_agreement_version",
                column_name="contract_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="contract_agreement",
                column_name="contract_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="contract_agreement_version",
                column_name="contract_type",
            ),
        ],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema="ops",
        enum_name="contracttype",
        new_values=[
            "FIRM_FIXED_PRICE",
            "TIME_AND_MATERIALS",
            "LABOR_HOUR",
            "COST_PLUS_FIXED_FEE",
            "COST_PLUS_AWARD_FEE",
            "HYBRID",
        ],
        affected_columns=[
            TableReference(
                table_schema="ops",
                table_name="aa_agreement",
                column_name="contract_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="aa_agreement_version",
                column_name="contract_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="contract_agreement",
                column_name="contract_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="contract_agreement_version",
                column_name="contract_type",
            ),
        ],
        enum_values_to_rename=[],
    )
    op.sync_enum_values(
        enum_schema="ops",
        enum_name="agreementtype",
        new_values=[
            "CONTRACT",
            "GRANT",
            "DIRECT_OBLIGATION",
            "IAA",
            "IAA_AA",
            "MISCELLANEOUS",
        ],
        affected_columns=[
            TableReference(
                table_schema="ops", table_name="agreement", column_name="agreement_type"
            ),
            TableReference(
                table_schema="ops",
                table_name="agreement_version",
                column_name="agreement_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="budget_line_item",
                column_name="budget_line_item_type",
            ),
            TableReference(
                table_schema="ops",
                table_name="budget_line_item_version",
                column_name="budget_line_item_type",
            ),
        ],
        enum_values_to_rename=[],
    )
    op.drop_column("agreement_version", "nick_name")
    op.drop_constraint(None, "agreement", type_="unique")
    op.drop_column("agreement", "nick_name")
    op.create_table(
        "iaa_aa_agreement",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("iaa_aa", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["agreement.id"], name=op.f("iaa_aa_agreement_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("iaa_aa_agreement_pkey")),
    )
    op.create_table(
        "iaa_aa_agreement_version",
        sa.Column("id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("iaa_aa", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("transaction_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "end_transaction_id", sa.BIGINT(), autoincrement=False, nullable=True
        ),
        sa.Column("operation_type", sa.SMALLINT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint(
            "id", "transaction_id", name=op.f("iaa_aa_agreement_version_pkey")
        ),
    )
    op.create_index(
        op.f("ix_iaa_aa_agreement_version_transaction_id"),
        "iaa_aa_agreement_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_iaa_aa_agreement_version_operation_type"),
        "iaa_aa_agreement_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_iaa_aa_agreement_version_end_transaction_id"),
        "iaa_aa_agreement_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.drop_table("aa_support_contacts")
    op.drop_table("aa_budget_line_item")
    op.drop_table("aa_agreement")
    op.drop_table("agreement_agency")
    op.drop_index(
        op.f("ix_agreement_agency_version_transaction_id"),
        table_name="agreement_agency_version",
    )
    op.drop_index(
        op.f("ix_agreement_agency_version_operation_type"),
        table_name="agreement_agency_version",
    )
    op.drop_index(
        op.f("ix_agreement_agency_version_end_transaction_id"),
        table_name="agreement_agency_version",
    )
    op.drop_table("agreement_agency_version")
    op.drop_index(
        op.f("ix_aa_support_contacts_version_transaction_id"),
        table_name="aa_support_contacts_version",
    )
    op.drop_index(
        op.f("ix_aa_support_contacts_version_operation_type"),
        table_name="aa_support_contacts_version",
    )
    op.drop_index(
        op.f("ix_aa_support_contacts_version_end_transaction_id"),
        table_name="aa_support_contacts_version",
    )
    op.drop_table("aa_support_contacts_version")
    op.drop_index(
        op.f("ix_aa_budget_line_item_version_transaction_id"),
        table_name="aa_budget_line_item_version",
    )
    op.drop_index(
        op.f("ix_aa_budget_line_item_version_operation_type"),
        table_name="aa_budget_line_item_version",
    )
    op.drop_index(
        op.f("ix_aa_budget_line_item_version_end_transaction_id"),
        table_name="aa_budget_line_item_version",
    )
    op.drop_table("aa_budget_line_item_version")
    op.drop_index(
        op.f("ix_aa_agreement_version_transaction_id"),
        table_name="aa_agreement_version",
    )
    op.drop_index(
        op.f("ix_aa_agreement_version_operation_type"),
        table_name="aa_agreement_version",
    )
    op.drop_index(
        op.f("ix_aa_agreement_version_end_transaction_id"),
        table_name="aa_agreement_version",
    )
    op.drop_table("aa_agreement_version")
    # ### end Alembic commands ###
