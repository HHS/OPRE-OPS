"""move clin to agreement,bli parent class

Revision ID: d11cb8eb36ce
Revises: a62f33014a89
Create Date: 2025-08-19 13:57:22.400701+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "d11cb8eb36ce"
down_revision: Union[str, None] = "a62f33014a89"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("budget_line_item", sa.Column("clin_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "budget_line_item", "clin", ["clin_id"], ["id"])
    op.add_column(
        "budget_line_item_version",
        sa.Column("clin_id", sa.Integer(), autoincrement=False, nullable=True),
    )

    # Add agreement_id as nullable first
    op.add_column("clin", sa.Column("agreement_id", sa.Integer(), nullable=True))

    # Populate the new column with data from contract_agreement_id
    op.execute(
        """
        UPDATE clin
        SET agreement_id = contract_agreement_id
        WHERE contract_agreement_id IS NOT NULL;
        """
    )

    # Now make it NOT NULL after data is populated
    op.alter_column("clin", "agreement_id", nullable=False)

    op.drop_constraint(
        op.f("clin_number_contract_agreement_id_key"), "clin", type_="unique"
    )
    op.create_unique_constraint(None, "clin", ["number", "agreement_id"])
    op.drop_constraint(
        op.f("clin_contract_agreement_id_fkey"), "clin", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "clin", "agreement", ["agreement_id"], ["id"], ondelete="CASCADE"
    )

    op.drop_column("clin", "contract_agreement_id")
    op.add_column(
        "clin_version",
        sa.Column("agreement_id", sa.Integer(), autoincrement=False, nullable=True),
    )

    op.execute(
        """
        UPDATE clin_version
        SET agreement_id = contract_agreement_id
        WHERE contract_agreement_id IS NOT NULL;
        """
    )

    op.drop_column("clin_version", "contract_agreement_id")
    op.drop_constraint(
        op.f("contract_budget_line_item_clin_id_fkey"),
        "contract_budget_line_item",
        type_="foreignkey",
    )

    op.execute(
        """
        UPDATE budget_line_item
        SET clin_id = contract_budget_line_item.clin_id
        FROM contract_budget_line_item
        WHERE contract_budget_line_item.id = budget_line_item.id;
        """
    )

    op.drop_column("contract_budget_line_item", "clin_id")

    op.execute(
        """
        UPDATE budget_line_item_version
        SET clin_id = contract_budget_line_item_version.clin_id
        FROM contract_budget_line_item_version
        WHERE contract_budget_line_item_version.id = budget_line_item_version.id;
        """
    )

    op.drop_column("contract_budget_line_item_version", "clin_id")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "contract_budget_line_item_version",
        sa.Column("clin_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "contract_budget_line_item",
        sa.Column("clin_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        op.f("contract_budget_line_item_clin_id_fkey"),
        "contract_budget_line_item",
        "clin",
        ["clin_id"],
        ["id"],
    )
    op.add_column(
        "clin_version",
        sa.Column(
            "contract_agreement_id", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("clin_version", "agreement_id")
    op.add_column(
        "clin",
        sa.Column(
            "contract_agreement_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "clin", type_="foreignkey")
    op.create_foreign_key(
        op.f("clin_contract_agreement_id_fkey"),
        "clin",
        "contract_agreement",
        ["contract_agreement_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint(None, "clin", type_="unique")
    op.create_unique_constraint(
        op.f("clin_number_contract_agreement_id_key"),
        "clin",
        ["number", "contract_agreement_id"],
    )
    op.drop_column("clin", "agreement_id")
    op.drop_column("budget_line_item_version", "clin_id")
    op.drop_constraint(None, "budget_line_item", type_="foreignkey")
    op.drop_column("budget_line_item", "clin_id")
    # ### end Alembic commands ###
