"""get agreement history trigger and new ops events

Revision ID: 070df8b08b8d
Revises: 10064745b084
Create Date: 2025-06-27 15:08:54.854005+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from alembic_postgresql_enum import TableReference
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '070df8b08b8d'
down_revision: Union[str, None] = '10064745b084'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('AGREEMENT_UPDATED', 'BUDGET_LINE_ITEM_CREATED', 'BUDGET_LINE_ITEM_UPDATED', 'BUDGET_LINE_ITEM_DELETED', 'CHANGE_REQUEST_CREATED', 'CHANGE_REQUEST_UPDATED', name='agreementhistorytype').create(op.get_bind())
    op.create_table('agreement_history_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('agreement_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('budget_line_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('ops_event_id', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('history_title', sa.String(), autoincrement=False, nullable=True),
    sa.Column('history_message', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('timestamp', sa.String(), autoincrement=False, nullable=True),
    sa.Column('history_type', postgresql.ENUM('AGREEMENT_UPDATED', 'BUDGET_LINE_ITEM_CREATED', 'BUDGET_LINE_ITEM_UPDATED', 'BUDGET_LINE_ITEM_DELETED', 'CHANGE_REQUEST_CREATED', 'CHANGE_REQUEST_UPDATED', name='agreementhistorytype', create_type=False), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('created_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('updated_on', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id')
    )
    op.create_index(op.f('ix_agreement_history_version_end_transaction_id'), 'agreement_history_version', ['end_transaction_id'], unique=False)
    op.create_index(op.f('ix_agreement_history_version_operation_type'), 'agreement_history_version', ['operation_type'], unique=False)
    op.create_index(op.f('ix_agreement_history_version_transaction_id'), 'agreement_history_version', ['transaction_id'], unique=False)
    op.create_table('agreement_history',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('agreement_id', sa.Integer(), nullable=True),
    sa.Column('budget_line_id', sa.Integer(), nullable=True),
    sa.Column('ops_event_id', sa.Integer(), nullable=False),
    sa.Column('history_title', sa.String(), nullable=False),
    sa.Column('history_message', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.String(), nullable=False),
    sa.Column('history_type', postgresql.ENUM('AGREEMENT_UPDATED', 'BUDGET_LINE_ITEM_CREATED', 'BUDGET_LINE_ITEM_UPDATED', 'BUDGET_LINE_ITEM_DELETED', 'CHANGE_REQUEST_CREATED', 'CHANGE_REQUEST_UPDATED', name='agreementhistorytype', create_type=False), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agreement_id'], ['agreement.id'], ),
    sa.ForeignKeyConstraint(['budget_line_id'], ['budget_line_item.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['ops_user.id'], ),
    sa.ForeignKeyConstraint(['ops_event_id'], ['ops_event.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['ops_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.sync_enum_values(
        enum_schema='ops',
        enum_name='opseventtype',
        new_values=['CREATE_BLI', 'UPDATE_BLI', 'DELETE_BLI', 'SEND_BLI_FOR_APPROVAL', 'CREATE_PROJECT', 'GET_AGREEMENT', 'CREATE_NEW_AGREEMENT', 'UPDATE_AGREEMENT', 'DELETE_AGREEMENT', 'CREATE_NEW_CAN', 'UPDATE_CAN', 'DELETE_CAN', 'CREATE_CAN_FUNDING_RECEIVED', 'UPDATE_CAN_FUNDING_RECEIVED', 'DELETE_CAN_FUNDING_RECEIVED', 'CREATE_CAN_FUNDING_BUDGET', 'UPDATE_CAN_FUNDING_BUDGET', 'DELETE_CAN_FUNDING_BUDGET', 'CREATE_CAN_FUNDING_DETAILS', 'UPDATE_CAN_FUNDING_DETAILS', 'DELETE_CAN_FUNDING_DETAILS', 'ACKNOWLEDGE_NOTIFICATION', 'CREATE_BLI_PACKAGE', 'UPDATE_BLI_PACKAGE', 'CREATE_SERVICES_COMPONENT', 'UPDATE_SERVICES_COMPONENT', 'DELETE_SERVICES_COMPONENT', 'CREATE_PROCUREMENT_ACQUISITION_PLANNING', 'UPDATE_PROCUREMENT_ACQUISITION_PLANNING', 'DELETE_PROCUREMENT_ACQUISITION_PLANNING', 'CREATE_DOCUMENT', 'UPDATE_DOCUMENT', 'LOGIN_ATTEMPT', 'LOGOUT', 'IDLE_LOGOUT', 'GET_USER_DETAILS', 'CREATE_USER', 'UPDATE_USER', 'DEACTIVATE_USER', 'CREATE_CHANGE_REQUEST', 'UPDATE_CHANGE_REQUEST'],
        affected_columns=[TableReference(table_schema='ops', table_name='ops_event', column_name='event_type'), TableReference(table_schema='ops', table_name='ops_event_version', column_name='event_type')],
        enum_values_to_rename=[],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values(
        enum_schema='ops',
        enum_name='opseventtype',
        new_values=['CREATE_BLI', 'UPDATE_BLI', 'DELETE_BLI', 'SEND_BLI_FOR_APPROVAL', 'CREATE_PROJECT', 'GET_AGREEMENT', 'CREATE_NEW_AGREEMENT', 'UPDATE_AGREEMENT', 'DELETE_AGREEMENT', 'CREATE_NEW_CAN', 'UPDATE_CAN', 'DELETE_CAN', 'CREATE_CAN_FUNDING_RECEIVED', 'UPDATE_CAN_FUNDING_RECEIVED', 'DELETE_CAN_FUNDING_RECEIVED', 'CREATE_CAN_FUNDING_BUDGET', 'UPDATE_CAN_FUNDING_BUDGET', 'DELETE_CAN_FUNDING_BUDGET', 'CREATE_CAN_FUNDING_DETAILS', 'UPDATE_CAN_FUNDING_DETAILS', 'DELETE_CAN_FUNDING_DETAILS', 'ACKNOWLEDGE_NOTIFICATION', 'CREATE_BLI_PACKAGE', 'UPDATE_BLI_PACKAGE', 'CREATE_SERVICES_COMPONENT', 'UPDATE_SERVICES_COMPONENT', 'DELETE_SERVICES_COMPONENT', 'CREATE_PROCUREMENT_ACQUISITION_PLANNING', 'UPDATE_PROCUREMENT_ACQUISITION_PLANNING', 'DELETE_PROCUREMENT_ACQUISITION_PLANNING', 'CREATE_DOCUMENT', 'UPDATE_DOCUMENT', 'LOGIN_ATTEMPT', 'LOGOUT', 'IDLE_LOGOUT', 'GET_USER_DETAILS', 'CREATE_USER', 'UPDATE_USER', 'DEACTIVATE_USER'],
        affected_columns=[TableReference(table_schema='ops', table_name='ops_event', column_name='event_type'), TableReference(table_schema='ops', table_name='ops_event_version', column_name='event_type')],
        enum_values_to_rename=[],
    )
    op.drop_table('agreement_history')
    op.drop_index(op.f('ix_agreement_history_version_transaction_id'), table_name='agreement_history_version')
    op.drop_index(op.f('ix_agreement_history_version_operation_type'), table_name='agreement_history_version')
    op.drop_index(op.f('ix_agreement_history_version_end_transaction_id'), table_name='agreement_history_version')
    op.drop_table('agreement_history_version')
    sa.Enum('AGREEMENT_UPDATED', 'BUDGET_LINE_ITEM_CREATED', 'BUDGET_LINE_ITEM_UPDATED', 'BUDGET_LINE_ITEM_DELETED', 'CHANGE_REQUEST_CREATED', 'CHANGE_REQUEST_UPDATED', name='agreementhistorytype').drop(op.get_bind())
    # ### end Alembic commands ###
